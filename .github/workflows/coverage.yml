name: coverage
on: [push, pull_request]

jobs:
  codecov:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Tarpaulin
      run: cargo install cargo-tarpaulin

    - name: Push Tarpaulin results to Codecov.io
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        cargo tarpaulin --out Xml --features "sqlite_bundled"
        bash <(curl -s https://codecov.io/bash) -X gcov -t $CODECOV_TOKEN

  coveralls:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    # This is to deal with an issue surrounding `cssparser` and `proc_macro2`
    # https://github.com/servo/rust-cssparser/issues/273
    # However, this still doesn't work.
    - name: Override cargo profile
      run: |
        mkdir .cargo
        printf "[profile.dev]\npanic = \"abort\"\n" > .cargo/config

    - name: Install grcov
      run: cargo install grcov

    - name: Run grcov
      env:
        PROJECT_NAME: "url_bot_rs"
        RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
        CARGO_HOME: "./.cargo"
        CARGO_INCREMENTAL: 0
      run: |
        cargo build --verbose --features "sqlite_bundled" || true
        cargo test --verbose --features "sqlite_bundled" || true
        zip -0 cov.zip $(find . -name "$PROJECT_NAME*.gc*" -print) || true
        grcov cov.zip -s . -t lcov --llvm --ignore-not-existing --ignore "/*" -o lcov.info || true

#    - name: Push grcov results to Coveralls via GitHub Action
#      uses: coverallsapp/github-action@v1.0.1
#      with:
#        github-token: ${{ secrets.GITHUB_TOKEN }}
#        path-to-lcov: "lcov.info"
